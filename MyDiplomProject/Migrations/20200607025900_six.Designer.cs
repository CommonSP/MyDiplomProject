// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDiplomProject;

namespace MyDiplomProject.Migrations
{
    [DbContext(typeof(MyDiplomDatabaseContext))]
    [Migration("20200607025900_six")]
    partial class six
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyDiplomProject.AgeCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.ToTable("AgeCategory");
                });

            modelBuilder.Entity("MyDiplomProject.ChatRooms", b =>
                {
                    b.Property<int>("ChatRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameRoom")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TypeRoom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChatRoomId");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("MyDiplomProject.Children", b =>
                {
                    b.Property<int>("ChildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Burn")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChildId");

                    b.HasIndex("GroupId")
                        .HasName("IX_Relationship18");

                    b.HasIndex("UserId")
                        .HasName("IX_Relationship19");

                    b.ToTable("Children");
                });

            modelBuilder.Entity("MyDiplomProject.EatMenus", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Eat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Mod")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("MenuId");

                    b.HasIndex("GroupId")
                        .HasName("IX_Relationship24");

                    b.ToTable("EatMenus");
                });

            modelBuilder.Entity("MyDiplomProject.Groups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("GroupId");

                    b.HasIndex("CategoryId")
                        .HasName("IX_Relationship26");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("MyDiplomProject.Messages", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChatRoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("ChatRoomId")
                        .HasName("IX_Relationship27");

                    b.HasIndex("UserId")
                        .HasName("IX_Relationship28");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MyDiplomProject.Schedules", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("End")
                        .HasColumnType("time");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("time");

                    b.HasKey("ScheduleId");

                    b.HasIndex("GroupId")
                        .HasName("IX_Relationship25");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("MyDiplomProject.UserInChatRoom", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ChatRoomId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ChatRoomId");

                    b.HasIndex("ChatRoomId");

                    b.ToTable("UserInChatRoom");
                });

            modelBuilder.Entity("MyDiplomProject.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("GroupId")
                        .HasName("IX_Relationship21");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyDiplomProject.Children", b =>
                {
                    b.HasOne("MyDiplomProject.Groups", "Group")
                        .WithMany("Children")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("ВходитВГруппу");

                    b.HasOne("MyDiplomProject.Users", "User")
                        .WithMany("Children")
                        .HasForeignKey("UserId")
                        .HasConstraintName("ЯвляетсяРодителем");
                });

            modelBuilder.Entity("MyDiplomProject.EatMenus", b =>
                {
                    b.HasOne("MyDiplomProject.Groups", "Group")
                        .WithMany("EatMenus")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("МенюГруппы");
                });

            modelBuilder.Entity("MyDiplomProject.Groups", b =>
                {
                    b.HasOne("MyDiplomProject.AgeCategory", "Category")
                        .WithMany("Groups")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("ОтноситсяКВозрастнойГруппе");
                });

            modelBuilder.Entity("MyDiplomProject.Messages", b =>
                {
                    b.HasOne("MyDiplomProject.ChatRooms", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("ChatRoomId")
                        .HasConstraintName("СообщениеВЧате")
                        .IsRequired();

                    b.HasOne("MyDiplomProject.Users", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .HasConstraintName("ОтправительСообщения")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDiplomProject.Schedules", b =>
                {
                    b.HasOne("MyDiplomProject.Groups", "Group")
                        .WithMany("Schedules")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("РасписаниеГруппы");
                });

            modelBuilder.Entity("MyDiplomProject.UserInChatRoom", b =>
                {
                    b.HasOne("MyDiplomProject.ChatRooms", "ChatRoom")
                        .WithMany("UserInChatRoom")
                        .HasForeignKey("ChatRoomId")
                        .HasConstraintName("Relationship31")
                        .IsRequired();

                    b.HasOne("MyDiplomProject.Users", "User")
                        .WithMany("UserInChatRoom")
                        .HasForeignKey("UserId")
                        .HasConstraintName("СостоитВЧате")
                        .IsRequired();
                });

            modelBuilder.Entity("MyDiplomProject.Users", b =>
                {
                    b.HasOne("MyDiplomProject.Groups", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("ЯвляетсяВоспитателем");
                });
#pragma warning restore 612, 618
        }
    }
}
